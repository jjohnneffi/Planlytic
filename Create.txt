
response = Map();
if(sub_action.equalsIgnoreCase("Projects"))
{
	response.put("type","form");
	response.put("title","Add Project");
	response.put("name","projectdata");
	response.put("hint","Fill in your project details");
	response.put("button_label","Submit");
	inputsList = list();
	inputsList0 = Map();
	inputsList0.put("label","Project ID");
	inputsList0.put("name","projectid");
	inputsList0.put("placeholder","Enter project id");
	inputsList0.put("hint","Project ID should be unique for every record");
	inputsList0.put("mandatory",true);
	inputsList0.put("type","number");
	inputsList.add(inputsList0);
	inputsList1 = Map();
	inputsList1.put("label","Project Name");
	inputsList1.put("name","projectname");
	inputsList1.put("placeholder","Enter project name");
	inputsList1.put("mandatory",true);
	inputsList1.put("type","text");
	inputsList.add(inputsList1);
	inputsList2 = Map();
	inputsList2.put("label","Category");
	inputsList2.put("name","category");
	inputsList2.put("mandatory",true);
	inputsList2.put("type","radio");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","work");
	optionsList0.put("label","Work");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","personal");
	optionsList1.put("label","Personal");
	optionsList.add(optionsList1);
	inputsList2.put("options",optionsList);
	inputsList.add(inputsList2);
	// 	inputsList3 = Map();
	// 	inputsList3.put("label","Client");
	// 	inputsList3.put("name","client");
	// 	inputsList3.put("placeholder","Choose from the list of options");
	// 	inputsList3.put("multiple",false);
	// 	inputsList3.put("mandatory",false);
	// 	inputsList3.put("type","select");
	// 	optionsList = list();
	// 	optionsList0 = Map();
	// 	optionsList0.put("value","clienta");
	// 	optionsList0.put("label","Client A");
	// 	optionsList.add(optionsList0);
	// 	optionsList1 = Map();
	// 	optionsList1.put("value","clientb");
	// 	optionsList1.put("label","Client B");
	// 	optionsList.add(optionsList1);
	// 	optionsList2 = Map();
	// 	optionsList2.put("value","organisationa");
	// 	optionsList2.put("label","Organisation A");
	// 	optionsList.add(optionsList2);
	// 	optionsList3 = Map();
	// 	optionsList3.put("value","organisationb");
	// 	optionsList3.put("label","Organisation B");
	// 	optionsList.add(optionsList3);
	// 	inputsList3.put("options",optionsList);
	// 	inputsList.add(inputsList3);
	inputsList3 = Map();
	inputsList3.put("label","Client");
	inputsList3.put("name","client");
	inputsList3.put("placeholder","Choose from the list of options");
	inputsList3.put("multiple",false);
	inputsList3.put("mandatory",true);
	inputsList3.put("type","select");
	query_map = Map();
	criteria_string = "regno>=0";
	query_map.put("criteria",criteria_string);
	response_map = zoho.cliq.getRecords("contactdb",query_map);
	optionsList = list();
	if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
	{
		records = response_map.get("list");
		for each  record in records
		{
			option = Map();
			option.put("value",record.get("name").toLowerCase().replaceAll(" ",""));
			option.put("label",record.get("name"));
			optionsList.add(option);
		}
	}
	else
	{
		option = Map();
		option.put("value","noclient");
		option.put("label","No Clients Available");
		optionsList.add(option);
	}
	inputsList3.put("options",optionsList);
	inputsList.add(inputsList3);
	inputsList4 = Map();
	inputsList4.put("label","Start Date");
	inputsList4.put("name","startdate");
	inputsList4.put("placeholder","Choose start date");
	inputsList4.put("mandatory",true);
	inputsList4.put("type","date");
	inputsList.add(inputsList4);
	inputsList5 = Map();
	inputsList5.put("label","Due Date");
	inputsList5.put("name","duedate");
	inputsList5.put("placeholder","Choose due date");
	inputsList5.put("mandatory",true);
	inputsList5.put("type","date");
	inputsList.add(inputsList5);
	inputsList6 = Map();
	inputsList6.put("label","Status");
	inputsList6.put("name","status");
	inputsList6.put("placeholder","Choose from the list of options");
	inputsList6.put("multiple",false);
	inputsList6.put("mandatory",true);
	inputsList6.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","inprogress");
	optionsList0.put("label","In Progress");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","onhold");
	optionsList1.put("label","On Hold");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","pending");
	optionsList2.put("label","Pending");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","canceled");
	optionsList3.put("label","Canceled");
	optionsList.add(optionsList3);
	optionsList4 = Map();
	optionsList4.put("value","completed");
	optionsList4.put("label","Completed");
	optionsList.add(optionsList4);
	optionsList5 = Map();
	optionsList5.put("value","tentative");
	optionsList5.put("label","Tentative");
	optionsList.add(optionsList5);
	inputsList6.put("options",optionsList);
	inputsList.add(inputsList6);
	inputsList7 = Map();
	inputsList7.put("label","Team Lead");
	inputsList7.put("name","teamlead");
	inputsList7.put("placeholder","Choose a lead from your team");
	inputsList7.put("multiple",false);
	inputsList7.put("mandatory",true);
	inputsList7.put("type","native_select");
	inputsList7.put("data_source","contacts");
	inputsList.add(inputsList7);
	inputsList8 = Map();
	inputsList8.put("label","Team Members");
	inputsList8.put("name","teammembers");
	inputsList8.put("placeholder","Choose members from your team");
	inputsList8.put("multiple",true);
	inputsList8.put("mandatory",true);
	inputsList8.put("type","native_select");
	inputsList8.put("data_source","contacts");
	inputsList.add(inputsList8);
	inputsList9 = Map();
	inputsList9.put("label","Total Hours");
	inputsList9.put("name","totalhours");
	inputsList9.put("placeholder","Enter expected time to complete the project");
	inputsList9.put("mandatory",false);
	inputsList9.put("type","number");
	inputsList.add(inputsList9);
	inputsList10 = Map();
	inputsList10.put("label","Total Budget");
	inputsList10.put("name","totalbudget");
	inputsList10.put("placeholder","Enter expected budget to complete the project");
	inputsList10.put("mandatory",false);
	inputsList10.put("type","number");
	inputsList.add(inputsList10);
	inputsList11 = Map();
	inputsList11.put("label","Labor Cost");
	inputsList11.put("name","laborcost");
	inputsList11.put("placeholder","Enter labor cost to complete the project");
	inputsList11.put("mandatory",false);
	inputsList11.put("type","number");
	inputsList.add(inputsList11);
	inputsList12 = Map();
	inputsList12.put("label","Product Cost");
	inputsList12.put("name","productcost");
	inputsList12.put("placeholder","Enter product cost to complete the project");
	inputsList12.put("mandatory",false);
	inputsList12.put("type","number");
	inputsList.add(inputsList12);
	inputsList13 = Map();
	inputsList13.put("label","Description");
	inputsList13.put("name","description");
	inputsList13.put("placeholder","Deliver an insight about the project");
	inputsList13.put("mandatory",false);
	inputsList13.put("type","textarea");
	inputsList.add(inputsList13);
	response.put("inputs",inputsList);
	action = Map();
	action.put("type","invoke.function");
	action.put("name","formsubmit");
	response.put("action",action);
}
else if(sub_action.equalsIgnoreCase("Quotes"))
{
	response.put("type","form");
	response.put("title","Add Quote");
	response.put("name","quotedetails");
	response.put("hint","Enter quote details for your project");
	response.put("button_label","Submit");
	inputsList = list();
	inputsList0 = Map();
	inputsList0.put("label","Project ID");
	inputsList0.put("name","projectid");
	inputsList0.put("placeholder","Enter project id");
	// inputsList0.put("min","0");
	// inputsList0.put("max","100");
	inputsList0.put("mandatory",true);
	inputsList0.put("type","number");
	inputsList.add(inputsList0);
	inputsList1 = Map();
	inputsList1.put("label","Quote No. ");
	inputsList1.put("name","quoteno");
	inputsList1.put("placeholder","Enter quote no.");
	inputsList1.put("hint","Quote No should be unique for every record");
	inputsList1.put("min_length","0");
	inputsList1.put("max_length","25");
	inputsList1.put("mandatory",true);
	inputsList1.put("type","text");
	inputsList.add(inputsList1);
	inputsList2 = Map();
	inputsList2.put("label","Client");
	inputsList2.put("name","client");
	inputsList2.put("placeholder","Choose from the list of options");
	inputsList2.put("multiple",false);
	inputsList2.put("mandatory",true);
	inputsList2.put("type","select");
	query_map = Map();
	criteria_string = "regno>=0";
	query_map.put("criteria",criteria_string);
	response_map = zoho.cliq.getRecords("contactdb",query_map);
	optionsList = list();
	if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
	{
		records = response_map.get("list");
		for each  record in records
		{
			option = Map();
			option.put("value",record.get("name").toLowerCase().replaceAll(" ",""));
			option.put("label",record.get("name"));
			optionsList.add(option);
		}
	}
	else
	{
		option = Map();
		option.put("value","noclient");
		option.put("label","No Clients Available");
		optionsList.add(option);
	}
	inputsList2.put("options",optionsList);
	inputsList.add(inputsList2);
	// 	inputsList2 = Map();
	// 	inputsList2.put("label","Client");
	// 	inputsList2.put("name","client");
	// 	inputsList2.put("placeholder","Choose from the list of options");
	// 	inputsList2.put("multiple",false);
	// 	inputsList2.put("mandatory",true);
	// 	inputsList2.put("type","select");
	// 	optionsList = list();
	// 	optionsList0 = Map();
	// 	optionsList0.put("value","clienta");
	// 	optionsList0.put("label","Client A");
	// 	optionsList.add(optionsList0);
	// 	optionsList1 = Map();
	// 	optionsList1.put("value","clientb");
	// 	optionsList1.put("label","Client B");
	// 	optionsList.add(optionsList1);
	// 	optionsList2 = Map();
	// 	optionsList2.put("value","organisationa");
	// 	optionsList2.put("label","Organisation A");
	// 	optionsList.add(optionsList2);
	// 	optionsList3 = Map();
	// 	optionsList3.put("value","organisationb");
	// 	optionsList3.put("label","Organisation B");
	// 	optionsList.add(optionsList3);
	// 	inputsList2.put("options",optionsList);
	// 	inputsList.add(inputsList2);
	inputsList3 = Map();
	inputsList3.put("label","Date of Issue");
	inputsList3.put("name","dateofissue");
	inputsList3.put("placeholder","Enter date of issue");
	inputsList3.put("mandatory",false);
	inputsList3.put("type","date");
	inputsList.add(inputsList3);
	inputsList4 = Map();
	inputsList4.put("label","Comment");
	inputsList4.put("name","comment");
	inputsList4.put("placeholder","Deliver the update or insight of the project");
	// inputsList4.put("min_length","0");
	// inputsList4.put("max_length","25");
	inputsList4.put("mandatory",false);
	inputsList4.put("type","textarea");
	inputsList.add(inputsList4);
	inputsList5 = Map();
	inputsList5.put("label","Product | Service");
	inputsList5.put("name","product");
	inputsList5.put("placeholder","Enter product or service");
	// inputsList5.put("min_length","0");
	// inputsList5.put("max_length","25");
	inputsList5.put("mandatory",false);
	inputsList5.put("type","text");
	inputsList.add(inputsList5);
	inputsList6 = Map();
	inputsList6.put("label","Quantity");
	inputsList6.put("name","quantity");
	inputsList6.put("placeholder","Enter quantity");
	// inputsList6.put("min","0");
	// inputsList6.put("max","100");
	inputsList6.put("mandatory",false);
	inputsList6.put("type","number");
	inputsList.add(inputsList6);
	inputsList7 = Map();
	inputsList7.put("label","Unit Price");
	inputsList7.put("name","unitprice");
	inputsList7.put("placeholder","Enter unit price value");
	// inputsList7.put("min","0");
	// inputsList7.put("max","100");
	inputsList7.put("mandatory",false);
	inputsList7.put("type","number");
	inputsList.add(inputsList7);
	inputsList8 = Map();
	inputsList8.put("label","Discount");
	inputsList8.put("name","discount");
	inputsList8.put("placeholder","Enter discount (in %)");
	// inputsList8.put("min","0");
	// inputsList8.put("max","100");
	inputsList8.put("mandatory",false);
	inputsList8.put("type","number");
	inputsList.add(inputsList8);
	inputsList9 = Map();
	inputsList9.put("label","Tax Value");
	inputsList9.put("name","taxvalue");
	inputsList9.put("placeholder","Enter tax value (in %)");
	// inputsList9.put("min","0");
	// inputsList9.put("max","100");
	inputsList9.put("mandatory",false);
	inputsList9.put("type","number");
	inputsList.add(inputsList9);
	inputsList10 = Map();
	inputsList10.put("label","Due Date");
	inputsList10.put("name","duedate");
	inputsList10.put("placeholder","Enter due date");
	inputsList10.put("mandatory",false);
	inputsList10.put("type","date");
	inputsList.add(inputsList10);
	inputsList11 = Map();
	inputsList11.put("label","Estimated Closing Date");
	inputsList11.put("name","closedate");
	inputsList11.put("placeholder","Enter estimated closing date");
	inputsList11.put("mandatory",false);
	inputsList11.put("type","date");
	inputsList.add(inputsList11);
	inputsList12 = Map();
	inputsList12.put("label","Estimated duration");
	inputsList12.put("name","duration");
	inputsList12.put("placeholder","Enter estimated duration (in hours)");
	// inputsList12.put("min_length","0");
	// inputsList12.put("max_length","25");
	inputsList12.put("mandatory",false);
	inputsList12.put("type","text");
	inputsList.add(inputsList12);
	inputsList13 = Map();
	inputsList13.put("label","Status");
	inputsList13.put("name","status");
	inputsList13.put("placeholder","Choose from the list of options");
	inputsList13.put("multiple",false);
	inputsList13.put("mandatory",true);
	inputsList13.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","opportunity");
	optionsList0.put("label","Opportunity");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","scoping");
	optionsList1.put("label","Scoping");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","proposal");
	optionsList2.put("label","Proposal");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","confirmed");
	optionsList3.put("label","Confirmed");
	optionsList.add(optionsList3);
	optionsList4 = Map();
	optionsList4.put("value","rejected");
	optionsList4.put("label","Rejected");
	optionsList.add(optionsList4);
	optionsList5 = Map();
	optionsList5.put("value","expired");
	optionsList5.put("label","Expired");
	optionsList.add(optionsList5);
	optionsList6 = Map();
	optionsList6.put("value","completed");
	optionsList6.put("label","Completed");
	optionsList.add(optionsList6);
	inputsList13.put("options",optionsList);
	inputsList.add(inputsList13);
	response.put("inputs",inputsList);
	action = Map();
	action.put("type","invoke.function");
	action.put("name","formsubmit");
	response.put("action",action);
}
else if(sub_action.equalsIgnoreCase("Invoices"))
{
	response.put("type","form");
	response.put("title","Add Invoice");
	response.put("name","invoicedetails");
	response.put("hint","Enter invoice details for your project");
	response.put("button_label","Submit");
	inputsList = list();
	inputsList0 = Map();
	inputsList0.put("label","Project ID");
	inputsList0.put("name","projectid");
	inputsList0.put("placeholder","Enter project id");
	// inputsList0.put("min","0");
	// inputsList0.put("max","100");
	inputsList0.put("mandatory",true);
	inputsList0.put("type","number");
	inputsList.add(inputsList0);
	inputsList1 = Map();
	inputsList1.put("label","Invoice No.");
	inputsList1.put("name","invoiceno");
	inputsList1.put("placeholder","Enter invoice no.");
	inputsList1.put("hint","Invoice No. should be unique for every record");
	// inputsList1.put("min_length","0");
	// inputsList1.put("max_length","25");
	inputsList1.put("mandatory",true);
	inputsList1.put("type","text");
	inputsList.add(inputsList1);
	inputsList2 = Map();
	inputsList2.put("label","Author");
	inputsList2.put("name","author");
	inputsList2.put("placeholder","Enter author name");
	inputsList2.put("multiple",false);
	inputsList2.put("mandatory",true);
	inputsList2.put("type","native_select");
	inputsList2.put("data_source","contacts");
	inputsList.add(inputsList2);
	inputsList3 = Map();
	inputsList3.put("label","Date of Issue");
	inputsList3.put("name","dateofissue");
	inputsList3.put("placeholder","Enter date of issue");
	inputsList3.put("mandatory",true);
	inputsList3.put("type","date");
	inputsList.add(inputsList3);
	inputsList4 = Map();
	inputsList4.put("label","Due Date");
	inputsList4.put("name","duedate");
	inputsList4.put("placeholder","Enter due date (in days)");
	// inputsList4.put("min_length","0");
	// inputsList4.put("max_length","25");
	inputsList4.put("mandatory",true);
	inputsList4.put("type","text");
	inputsList.add(inputsList4);
	inputsList5 = Map();
	inputsList5.put("label","Payer");
	inputsList5.put("name","payer");
	inputsList5.put("placeholder","Choose from the list of options");
	inputsList5.put("multiple",false);
	inputsList5.put("mandatory",true);
	inputsList5.put("type","select");
	query_map = Map();
	criteria_string = "regno>=0";
	query_map.put("criteria",criteria_string);
	response_map = zoho.cliq.getRecords("contactdb",query_map);
	optionsList = list();
	if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
	{
		records = response_map.get("list");
		for each  record in records
		{
			option = Map();
			option.put("value",record.get("name").toLowerCase().replaceAll(" ",""));
			option.put("label",record.get("name"));
			optionsList.add(option);
		}
	}
	else
	{
		option = Map();
		option.put("value","noclient");
		option.put("label","No Clients Available");
		optionsList.add(option);
	}
	inputsList5.put("options",optionsList);
	inputsList.add(inputsList5);
	// 	inputsList5 = Map();
	// 	inputsList5.put("label","Payer");
	// 	inputsList5.put("name","payer");
	// 	inputsList5.put("placeholder","Choose from the list of options");
	// 	inputsList5.put("multiple",false);
	// 	inputsList5.put("mandatory",true);
	// 	inputsList5.put("type","select");
	// 	optionsList = list();
	// 	optionsList0 = Map();
	// 	optionsList0.put("value","clienta");
	// 	optionsList0.put("label","Client A");
	// 	optionsList.add(optionsList0);
	// 	optionsList1 = Map();
	// 	optionsList1.put("value","clientb");
	// 	optionsList1.put("label","Client B");
	// 	optionsList.add(optionsList1);
	// 	optionsList2 = Map();
	// 	optionsList2.put("value","organisationa");
	// 	optionsList2.put("label","Organisation A");
	// 	optionsList.add(optionsList2);
	// 	optionsList3 = Map();
	// 	optionsList3.put("value","organisationb");
	// 	optionsList3.put("label","Organisation B");
	// 	optionsList.add(optionsList3);
	// 	inputsList5.put("options",optionsList);
	// 	inputsList.add(inputsList5);
	inputsList6 = Map();
	inputsList6.put("label","Comment");
	inputsList6.put("name","comment");
	inputsList6.put("placeholder","Deliver the update or insight of the project");
	// inputsList6.put("min_length","0");
	// inputsList6.put("max_length","25");
	inputsList6.put("mandatory",false);
	inputsList6.put("type","textarea");
	inputsList.add(inputsList6);
	inputsList7 = Map();
	inputsList7.put("label","Product | Service");
	inputsList7.put("name","product");
	inputsList7.put("placeholder","Enter product or service");
	// inputsList7.put("min_length","0");
	// inputsList7.put("max_length","25");
	inputsList7.put("mandatory",false);
	inputsList7.put("type","text");
	inputsList.add(inputsList7);
	inputsList8 = Map();
	inputsList8.put("label","Quantity");
	inputsList8.put("name","quantity");
	inputsList8.put("placeholder","Enter quantity");
	// inputsList8.put("min","0");
	// inputsList8.put("max","100");
	inputsList8.put("mandatory",false);
	inputsList8.put("type","number");
	inputsList.add(inputsList8);
	inputsList9 = Map();
	inputsList9.put("label","Unit Price");
	inputsList9.put("name","unitprice");
	inputsList9.put("placeholder","Enter unit price");
	// inputsList9.put("min","0");
	// inputsList9.put("max","100");
	inputsList9.put("mandatory",false);
	inputsList9.put("type","number");
	inputsList.add(inputsList9);
	inputsList10 = Map();
	inputsList10.put("label","Discount");
	inputsList10.put("name","discount");
	inputsList10.put("placeholder","Enter discount (in %)");
	// inputsList10.put("min","0");
	// inputsList10.put("max","100");
	inputsList10.put("mandatory",false);
	inputsList10.put("type","number");
	inputsList.add(inputsList10);
	inputsList11 = Map();
	inputsList11.put("label","Tax Value");
	inputsList11.put("name","taxvalue");
	inputsList11.put("placeholder","Enter tax value (in %)");
	// inputsList11.put("min","0");
	// inputsList11.put("max","100");
	inputsList11.put("mandatory",false);
	inputsList11.put("type","number");
	inputsList.add(inputsList11);
	inputsList12 = Map();
	inputsList12.put("label","Payment Method");
	inputsList12.put("name","paymentmethod");
	inputsList12.put("placeholder","Choose from the list of options");
	inputsList12.put("multiple",false);
	inputsList12.put("mandatory",true);
	inputsList12.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","banktransfer");
	optionsList0.put("label","Bank Transfer");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","cash");
	optionsList1.put("label","Cash");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","cardpayment");
	optionsList2.put("label","Card Payment");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","barter");
	optionsList3.put("label","Barter");
	optionsList.add(optionsList3);
	optionsList4 = Map();
	optionsList4.put("value","credit");
	optionsList4.put("label","Credit");
	optionsList.add(optionsList4);
	optionsList5 = Map();
	optionsList5.put("value","check");
	optionsList5.put("label","Check");
	optionsList.add(optionsList5);
	inputsList12.put("options",optionsList);
	inputsList.add(inputsList12);
	inputsList13 = Map();
	inputsList13.put("label","Overdue Interest");
	inputsList13.put("name","overdue");
	inputsList13.put("placeholder","Enter overdue interest (in %)");
	// inputsList13.put("min","0");
	// inputsList13.put("max","100");
	inputsList13.put("mandatory",true);
	inputsList13.put("type","number");
	inputsList.add(inputsList13);
	response.put("inputs",inputsList);
	action = Map();
	action.put("type","invoke.function");
	action.put("name","formsubmit");
	response.put("action",action);
}
else if(sub_action.equalsIgnoreCase("Bills"))
{
	response.put("type","form");
	response.put("title","Add Bill");
	response.put("name","billdetails");
	response.put("hint","Enter bill details for your project");
	response.put("button_label","Submit");
	inputsList = list();
	inputsList0 = Map();
	inputsList0.put("label","Project ID");
	inputsList0.put("name","projectid");
	inputsList0.put("placeholder","Enter project id");
	// inputsList0.put("min","0");
	// inputsList0.put("max","100");
	inputsList0.put("mandatory",true);
	inputsList0.put("type","number");
	inputsList.add(inputsList0);
	inputsList1 = Map();
	inputsList1.put("label","Bill No.");
	inputsList1.put("name","billno");
	inputsList1.put("placeholder","Enter bill no.");
	inputsList1.put("hint","Bill No. should be unique for every record");
	// inputsList1.put("min","0");
	// inputsList1.put("max","100");
	inputsList1.put("mandatory",true);
	inputsList1.put("type","number");
	inputsList.add(inputsList1);
	inputsList2 = Map();
	inputsList2.put("label","Recipient");
	inputsList2.put("name","recipient");
	inputsList2.put("placeholder","Choose from the list of options");
	inputsList2.put("multiple",false);
	inputsList2.put("mandatory",true);
	inputsList2.put("type","select");
	query_map = Map();
	criteria_string = "regno>=0";
	query_map.put("criteria",criteria_string);
	response_map = zoho.cliq.getRecords("contactdb",query_map);
	optionsList = list();
	if(response_map.get("status").equalsIgnoreCase("SUCCESS") && response_map.get("list").size() > 0)
	{
		records = response_map.get("list");
		for each  record in records
		{
			option = Map();
			option.put("value",record.get("name").toLowerCase().replaceAll(" ",""));
			option.put("label",record.get("name"));
			optionsList.add(option);
		}
	}
	else
	{
		option = Map();
		option.put("value","noclient");
		option.put("label","No Clients Available");
		optionsList.add(option);
	}
	inputsList2.put("options",optionsList);
	inputsList.add(inputsList2);
	// 	inputsList2 = Map();
	// 	inputsList2.put("label","Recipient");
	// 	inputsList2.put("name","recipient");
	// 	inputsList2.put("placeholder","Choose from the list of options");
	// 	inputsList2.put("multiple",false);
	// 	inputsList2.put("mandatory",true);
	// 	inputsList2.put("type","select");
	// 	optionsList = list();
	// 	optionsList0 = Map();
	// 	optionsList0.put("value","clienta");
	// 	optionsList0.put("label","Client A");
	// 	optionsList.add(optionsList0);
	// 	optionsList1 = Map();
	// 	optionsList1.put("value","clientb");
	// 	optionsList1.put("label","Client B");
	// 	optionsList.add(optionsList1);
	// 	optionsList2 = Map();
	// 	optionsList2.put("value","organisationa");
	// 	optionsList2.put("label","Organisation A");
	// 	optionsList.add(optionsList2);
	// 	optionsList3 = Map();
	// 	optionsList3.put("value","organisationb");
	// 	optionsList3.put("label","Organisation B");
	// 	optionsList.add(optionsList3);
	// 	inputsList2.put("options",optionsList);
	// 	inputsList.add(inputsList2);
	inputsList3 = Map();
	inputsList3.put("label","Date of Issue");
	inputsList3.put("name","dateofissue");
	inputsList3.put("placeholder","Enter date of issue");
	inputsList3.put("mandatory",true);
	inputsList3.put("type","date");
	inputsList.add(inputsList3);
	inputsList4 = Map();
	inputsList4.put("label","Due Date");
	inputsList4.put("name","duedate");
	inputsList4.put("placeholder","Enter due date");
	inputsList4.put("mandatory",false);
	inputsList4.put("type","date");
	inputsList.add(inputsList4);
	inputsList5 = Map();
	inputsList5.put("label","Issuer");
	inputsList5.put("name","issuer");
	inputsList5.put("placeholder","Enter issuer name");
	// inputsList5.put("min_length","0");
	// inputsList5.put("max_length","25");
	inputsList5.put("mandatory",true);
	inputsList5.put("type","text");
	inputsList5.put("type","native_select");
	inputsList5.put("data_source","contacts");
	inputsList.add(inputsList5);
	inputsList6 = Map();
	inputsList6.put("label","Comment");
	inputsList6.put("name","comment");
	inputsList6.put("placeholder","Provide bill details");
	// inputsList6.put("min_length","0");
	// inputsList6.put("max_length","25");
	inputsList6.put("mandatory",false);
	inputsList6.put("type","textarea");
	inputsList.add(inputsList6);
	inputsList7 = Map();
	inputsList7.put("label","Product | Service");
	inputsList7.put("name","product");
	inputsList7.put("placeholder","Enter product or service");
	// inputsList7.put("min_length","0");
	// inputsList7.put("max_length","25");
	inputsList7.put("mandatory",false);
	inputsList7.put("type","text");
	inputsList.add(inputsList7);
	inputsList8 = Map();
	inputsList8.put("label","Quantity");
	inputsList8.put("name","quantity");
	inputsList8.put("placeholder","Enter quantity");
	// inputsList8.put("min","0");
	// inputsList8.put("max","100");
	inputsList8.put("mandatory",false);
	inputsList8.put("type","number");
	inputsList.add(inputsList8);
	inputsList9 = Map();
	inputsList9.put("label","Unit Price");
	inputsList9.put("name","unitprice");
	inputsList9.put("placeholder","Enter unit price");
	// inputsList9.put("min","0");
	// inputsList9.put("max","100");
	inputsList9.put("mandatory",false);
	inputsList9.put("type","number");
	inputsList.add(inputsList9);
	inputsList10 = Map();
	inputsList10.put("label","Payment Method");
	inputsList10.put("name","paymentmethod");
	inputsList10.put("placeholder","Choose from the list of options");
	inputsList10.put("multiple",false);
	inputsList10.put("mandatory",true);
	inputsList10.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","BankTransfer");
	optionsList0.put("label","Bank Transfer");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","Cash");
	optionsList1.put("label","Cash");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","CardPayment");
	optionsList2.put("label","Card Payment");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","Barter");
	optionsList3.put("label","Barter");
	optionsList.add(optionsList3);
	optionsList4 = Map();
	optionsList4.put("value","Check");
	optionsList4.put("label","Check");
	optionsList.add(optionsList4);
	optionsList5 = Map();
	optionsList5.put("value","Credit");
	optionsList5.put("label","Credit");
	optionsList.add(optionsList5);
	inputsList10.put("options",optionsList);
	inputsList.add(inputsList10);
	inputsList11 = Map();
	inputsList11.put("label","Price List");
	inputsList11.put("name","pricelist");
	inputsList11.put("placeholder","Choose from the list of options");
	inputsList11.put("multiple",false);
	inputsList11.put("mandatory",true);
	inputsList11.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","INR");
	optionsList0.put("label","INR");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","StandardGBP");
	optionsList1.put("label","Standard (GBP)");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","StandardUSD");
	optionsList2.put("label","Standard (USD)");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","SpecialEUR");
	optionsList3.put("label","Special (EUR)");
	optionsList.add(optionsList3);
	inputsList11.put("options",optionsList);
	inputsList.add(inputsList11);
	inputsList12 = Map();
	inputsList12.put("label","Discount");
	inputsList12.put("name","discount");
	inputsList12.put("placeholder","Enter discount (in %)");
	// inputsList12.put("min_length","0");
	// inputsList12.put("max_length","25");
	inputsList12.put("mandatory",false);
	inputsList12.put("type","text");
	inputsList.add(inputsList12);
	inputsList13 = Map();
	inputsList13.put("label","Tax");
	inputsList13.put("name","tax");
	inputsList13.put("placeholder","Enter tax (in %)");
	// inputsList13.put("min","0");
	// inputsList13.put("max","100");
	inputsList13.put("mandatory",false);
	inputsList13.put("type","number");
	inputsList.add(inputsList13);
	response.put("inputs",inputsList);
	action = Map();
	action.put("type","invoke.function");
	action.put("name","formsubmit");
	response.put("action",action);
}
else if(sub_action.equalsIgnoreCase("Tasks"))
{
	response.put("type","form");
	response.put("title","New Task");
	response.put("name","newtask");
	response.put("hint","Fill in your task details");
	response.put("button_label","Submit");
	inputsList = list();
	inputsList9 = Map();
	inputsList9.put("label","Task No.");
	inputsList9.put("name","taskno");
	inputsList9.put("placeholder","Enter your task no.");
	inputsList9.put("hint","Task No. should be unique for every record");
	inputsList9.put("mandatory",true);
	inputsList9.put("type","number");
	inputsList.add(inputsList9);
	inputsList0 = Map();
	inputsList0.put("label","Title");
	inputsList0.put("name","title");
	inputsList0.put("placeholder","Enter title");
	// inputsList0.put("min_length","0");
	// inputsList0.put("max_length","25");
	inputsList0.put("mandatory",true);
	inputsList0.put("type","text");
	inputsList.add(inputsList0);
	inputsList1 = Map();
	inputsList1.put("label","Planned Duration");
	inputsList1.put("name","duration");
	inputsList1.put("placeholder","Enter duration (in hours)");
	// inputsList1.put("min","0");
	// inputsList1.put("max","100");
	inputsList1.put("mandatory",false);
	inputsList1.put("type","number");
	inputsList.add(inputsList1);
	inputsList2 = Map();
	inputsList2.put("label","Start Date");
	inputsList2.put("name","startdate");
	inputsList2.put("placeholder","Enter start date");
	inputsList2.put("mandatory",true);
	inputsList2.put("type","date");
	inputsList.add(inputsList2);
	inputsList3 = Map();
	inputsList3.put("label","Due Date");
	inputsList3.put("name","duedate");
	inputsList3.put("placeholder","Enter due date");
	inputsList3.put("mandatory",true);
	inputsList3.put("type","date");
	inputsList.add(inputsList3);
	inputsList4 = Map();
	inputsList4.put("label","Activity Type");
	inputsList4.put("name","activity");
	inputsList4.put("placeholder","Choose from the list of options");
	inputsList4.put("multiple",false);
	inputsList4.put("mandatory",true);
	inputsList4.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","consultation");
	optionsList0.put("label","Consultation");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","copywriting");
	optionsList1.put("label","Copy Writing");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","Design");
	optionsList2.put("label","Design");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","ProjectManagement");
	optionsList3.put("label","Project Management");
	optionsList.add(optionsList3);
	optionsList4 = Map();
	optionsList4.put("value","Research");
	optionsList4.put("label","Research");
	optionsList.add(optionsList4);
	optionsList5 = Map();
	optionsList5.put("value","Strategy");
	optionsList5.put("label","Strategy");
	optionsList.add(optionsList5);
	inputsList4.put("options",optionsList);
	inputsList.add(inputsList4);
	inputsList5 = Map();
	inputsList5.put("label","Priority");
	inputsList5.put("name","priority");
	inputsList5.put("placeholder","Choose the priority of the task");
	inputsList5.put("multiple",false);
	inputsList5.put("mandatory",true);
	inputsList5.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","highpriority");
	optionsList0.put("label","High Priority");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","mediumpriority");
	optionsList1.put("label","Medium Priority");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","LowPriority");
	optionsList2.put("label","Low Priority");
	optionsList.add(optionsList2);
	inputsList5.put("options",optionsList);
	inputsList.add(inputsList5);
	inputsList6 = Map();
	inputsList6.put("label","Condition");
	inputsList6.put("name","condition");
	inputsList6.put("placeholder","Choose the condition of the task");
	inputsList6.put("multiple",false);
	inputsList6.put("mandatory",true);
	inputsList6.put("type","select");
	optionsList = list();
	optionsList0 = Map();
	optionsList0.put("value","planned");
	optionsList0.put("label","Planned");
	optionsList.add(optionsList0);
	optionsList1 = Map();
	optionsList1.put("value","attention");
	optionsList1.put("label","Needs Attention");
	optionsList.add(optionsList1);
	optionsList2 = Map();
	optionsList2.put("value","InProgress");
	optionsList2.put("label","In Progress");
	optionsList.add(optionsList2);
	optionsList3 = Map();
	optionsList3.put("value","Completed");
	optionsList3.put("label","Completed");
	optionsList.add(optionsList3);
	inputsList6.put("options",optionsList);
	inputsList.add(inputsList6);
	inputsList7 = Map();
	inputsList7.put("label","Description");
	inputsList7.put("name","description");
	inputsList7.put("placeholder","Describe your task");
	// inputsList7.put("min_length","0");
	// inputsList7.put("max_length","25");
	inputsList7.put("mandatory",false);
	inputsList7.put("type","textarea");
	inputsList.add(inputsList7);
	inputsList8 = Map();
	inputsList8.put("label","Assigned to");
	inputsList8.put("name","users");
	inputsList8.put("placeholder","Enter assigned user");
	inputsList8.put("multiple",false);
	inputsList8.put("mandatory",true);
	inputsList8.put("type","text");
	inputsList8.put("type","native_select");
	inputsList8.put("data_source","contacts");
	inputsList.add(inputsList8);
	response.put("inputs",inputsList);
	action = Map();
	action.put("type","invoke.function");
	action.put("name","formsubmit");
	response.put("action",action);
}
else
{
	banner = {"type":"banner","status":"failure","text":"Select one of the options from the sub-action menu."};
	return banner;
}
return response;
